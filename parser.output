Terminals unused in grammar

    CLASS
    RET
    VAL
    B_TRUE
    B_FALSE
    EQUAL
    INEQUAL
    GREATER
    LESS
    GREATER_EQUAL
    LESS_EQUAL
    COMMA
    LEFT_BRACKET
    RIGHT_BRACKET


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 main

    3 $@2: %empty

    4 main: FUN MAIN LEFT_PAREN RIGHT_PAREN LEFT_BRACE $@2 func RIGHT_BRACE

    5 func: %empty
    6     | stmt_list

    7 stmt_list: stmt SEMICOLON
    8          | stmt_list stmt SEMICOLON

    9 stmt: expr
   10     | declare
   11     | assignment
   12     | print

   13 declare: VAR IDENTIFIER COLON type
   14        | VAR IDENTIFIER COLON type ASSIGN expr

   15 type: BOOL
   16     | CHAR
   17     | INT
   18     | REAL

   19 assignment: IDENTIFIER ASSIGN expr

   20 expr: value
   21     | expr PLUS expr
   22     | expr MINUS expr
   23     | expr ASTERISK expr
   24     | expr DIVIDE expr
   25     | LEFT_PAREN expr RIGHT_PAREN

   26 $@3: %empty

   27 expr: MINUS $@3 expr

   28 print: PRINT LEFT_PAREN expr RIGHT_PAREN

   29 value: REALNUMBER
   30      | INTEGER
   31      | STRING
   32      | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    FUN (258) 4
    MAIN (259) 4
    PRINT (260) 28
    CLASS (261)
    RET (262)
    VAR (263) 13 14
    VAL (264)
    BOOL (265) 15
    CHAR (266) 16
    INT (267) 17
    REAL (268) 18
    B_TRUE (269)
    B_FALSE (270)
    PLUS (271) 21
    MINUS (272) 22 27
    ASTERISK (273) 23
    DIVIDE (274) 24
    ASSIGN (275) 14 19
    EQUAL (276)
    INEQUAL (277)
    GREATER (278)
    LESS (279)
    GREATER_EQUAL (280)
    LESS_EQUAL (281)
    COMMA (282)
    SEMICOLON (283) 7 8
    COLON (284) 13 14
    LEFT_PAREN (285) 4 25 28
    RIGHT_PAREN (286) 4 25 28
    LEFT_BRACKET (287)
    RIGHT_BRACKET (288)
    LEFT_BRACE (289) 4
    RIGHT_BRACE (290) 4
    INTEGER <intNum> (291) 30
    REALNUMBER <realNum> (292) 29
    STRING <strVal> (293) 31
    IDENTIFIER <strVal> (294) 13 14 19 32
    UMINUS (295)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    program (42)
        on left: 2
        on right: 0
    $@1 (43)
        on left: 1
        on right: 2
    main (44)
        on left: 4
        on right: 2
    $@2 (45)
        on left: 3
        on right: 4
    func (46)
        on left: 5 6
        on right: 4
    stmt_list (47)
        on left: 7 8
        on right: 6 8
    stmt (48)
        on left: 9 10 11 12
        on right: 7 8
    declare (49)
        on left: 13 14
        on right: 10
    type <symbolType> (50)
        on left: 15 16 17 18
        on right: 13 14
    assignment <symbol> (51)
        on left: 19
        on right: 11
    expr <exprData> (52)
        on left: 20 21 22 23 24 25 27
        on right: 9 14 19 21 22 23 24 25 27 28
    $@3 (53)
        on left: 26
        on right: 27
    print (54)
        on left: 28
        on right: 12
    value <symbol> (55)
        on left: 29 30 31 32
        on right: 20


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . main

    FUN  shift, and go to state 4

    main  go to state 5


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 main: FUN . MAIN LEFT_PAREN RIGHT_PAREN LEFT_BRACE $@2 func RIGHT_BRACE

    MAIN  shift, and go to state 6


State 5

    2 program: $@1 main .

    $default  reduce using rule 2 (program)


State 6

    4 main: FUN MAIN . LEFT_PAREN RIGHT_PAREN LEFT_BRACE $@2 func RIGHT_BRACE

    LEFT_PAREN  shift, and go to state 7


State 7

    4 main: FUN MAIN LEFT_PAREN . RIGHT_PAREN LEFT_BRACE $@2 func RIGHT_BRACE

    RIGHT_PAREN  shift, and go to state 8


State 8

    4 main: FUN MAIN LEFT_PAREN RIGHT_PAREN . LEFT_BRACE $@2 func RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 9


State 9

    4 main: FUN MAIN LEFT_PAREN RIGHT_PAREN LEFT_BRACE . $@2 func RIGHT_BRACE

    $default  reduce using rule 3 ($@2)

    $@2  go to state 10


State 10

    4 main: FUN MAIN LEFT_PAREN RIGHT_PAREN LEFT_BRACE $@2 . func RIGHT_BRACE

    PRINT       shift, and go to state 11
    VAR         shift, and go to state 12
    MINUS       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    INTEGER     shift, and go to state 15
    REALNUMBER  shift, and go to state 16
    STRING      shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 5 (func)

    func        go to state 19
    stmt_list   go to state 20
    stmt        go to state 21
    declare     go to state 22
    assignment  go to state 23
    expr        go to state 24
    print       go to state 25
    value       go to state 26


State 11

   28 print: PRINT . LEFT_PAREN expr RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 27


State 12

   13 declare: VAR . IDENTIFIER COLON type
   14        | VAR . IDENTIFIER COLON type ASSIGN expr

    IDENTIFIER  shift, and go to state 28


State 13

   27 expr: MINUS . $@3 expr

    $default  reduce using rule 26 ($@3)

    $@3  go to state 29


State 14

   25 expr: LEFT_PAREN . expr RIGHT_PAREN

    MINUS       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    INTEGER     shift, and go to state 15
    REALNUMBER  shift, and go to state 16
    STRING      shift, and go to state 17
    IDENTIFIER  shift, and go to state 30

    expr   go to state 31
    value  go to state 26


State 15

   30 value: INTEGER .

    $default  reduce using rule 30 (value)


State 16

   29 value: REALNUMBER .

    $default  reduce using rule 29 (value)


State 17

   31 value: STRING .

    $default  reduce using rule 31 (value)


State 18

   19 assignment: IDENTIFIER . ASSIGN expr
   32 value: IDENTIFIER .

    ASSIGN  shift, and go to state 32

    $default  reduce using rule 32 (value)


State 19

    4 main: FUN MAIN LEFT_PAREN RIGHT_PAREN LEFT_BRACE $@2 func . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 33


State 20

    6 func: stmt_list .
    8 stmt_list: stmt_list . stmt SEMICOLON

    PRINT       shift, and go to state 11
    VAR         shift, and go to state 12
    MINUS       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    INTEGER     shift, and go to state 15
    REALNUMBER  shift, and go to state 16
    STRING      shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 6 (func)

    stmt        go to state 34
    declare     go to state 22
    assignment  go to state 23
    expr        go to state 24
    print       go to state 25
    value       go to state 26


State 21

    7 stmt_list: stmt . SEMICOLON

    SEMICOLON  shift, and go to state 35


State 22

   10 stmt: declare .

    $default  reduce using rule 10 (stmt)


State 23

   11 stmt: assignment .

    $default  reduce using rule 11 (stmt)


State 24

    9 stmt: expr .
   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . ASTERISK expr
   24     | expr . DIVIDE expr

    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    ASTERISK  shift, and go to state 38
    DIVIDE    shift, and go to state 39

    $default  reduce using rule 9 (stmt)


State 25

   12 stmt: print .

    $default  reduce using rule 12 (stmt)


State 26

   20 expr: value .

    $default  reduce using rule 20 (expr)


State 27

   28 print: PRINT LEFT_PAREN . expr RIGHT_PAREN

    MINUS       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    INTEGER     shift, and go to state 15
    REALNUMBER  shift, and go to state 16
    STRING      shift, and go to state 17
    IDENTIFIER  shift, and go to state 30

    expr   go to state 40
    value  go to state 26


State 28

   13 declare: VAR IDENTIFIER . COLON type
   14        | VAR IDENTIFIER . COLON type ASSIGN expr

    COLON  shift, and go to state 41


State 29

   27 expr: MINUS $@3 . expr

    MINUS       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    INTEGER     shift, and go to state 15
    REALNUMBER  shift, and go to state 16
    STRING      shift, and go to state 17
    IDENTIFIER  shift, and go to state 30

    expr   go to state 42
    value  go to state 26


State 30

   32 value: IDENTIFIER .

    $default  reduce using rule 32 (value)


State 31

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . ASTERISK expr
   24     | expr . DIVIDE expr
   25     | LEFT_PAREN expr . RIGHT_PAREN

    PLUS         shift, and go to state 36
    MINUS        shift, and go to state 37
    ASTERISK     shift, and go to state 38
    DIVIDE       shift, and go to state 39
    RIGHT_PAREN  shift, and go to state 43


State 32

   19 assignment: IDENTIFIER ASSIGN . expr

    MINUS       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    INTEGER     shift, and go to state 15
    REALNUMBER  shift, and go to state 16
    STRING      shift, and go to state 17
    IDENTIFIER  shift, and go to state 30

    expr   go to state 44
    value  go to state 26


State 33

    4 main: FUN MAIN LEFT_PAREN RIGHT_PAREN LEFT_BRACE $@2 func RIGHT_BRACE .

    $default  reduce using rule 4 (main)


State 34

    8 stmt_list: stmt_list stmt . SEMICOLON

    SEMICOLON  shift, and go to state 45


State 35

    7 stmt_list: stmt SEMICOLON .

    $default  reduce using rule 7 (stmt_list)


State 36

   21 expr: expr PLUS . expr

    MINUS       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    INTEGER     shift, and go to state 15
    REALNUMBER  shift, and go to state 16
    STRING      shift, and go to state 17
    IDENTIFIER  shift, and go to state 30

    expr   go to state 46
    value  go to state 26


State 37

   22 expr: expr MINUS . expr

    MINUS       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    INTEGER     shift, and go to state 15
    REALNUMBER  shift, and go to state 16
    STRING      shift, and go to state 17
    IDENTIFIER  shift, and go to state 30

    expr   go to state 47
    value  go to state 26


State 38

   23 expr: expr ASTERISK . expr

    MINUS       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    INTEGER     shift, and go to state 15
    REALNUMBER  shift, and go to state 16
    STRING      shift, and go to state 17
    IDENTIFIER  shift, and go to state 30

    expr   go to state 48
    value  go to state 26


State 39

   24 expr: expr DIVIDE . expr

    MINUS       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    INTEGER     shift, and go to state 15
    REALNUMBER  shift, and go to state 16
    STRING      shift, and go to state 17
    IDENTIFIER  shift, and go to state 30

    expr   go to state 49
    value  go to state 26


State 40

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . ASTERISK expr
   24     | expr . DIVIDE expr
   28 print: PRINT LEFT_PAREN expr . RIGHT_PAREN

    PLUS         shift, and go to state 36
    MINUS        shift, and go to state 37
    ASTERISK     shift, and go to state 38
    DIVIDE       shift, and go to state 39
    RIGHT_PAREN  shift, and go to state 50


State 41

   13 declare: VAR IDENTIFIER COLON . type
   14        | VAR IDENTIFIER COLON . type ASSIGN expr

    BOOL  shift, and go to state 51
    CHAR  shift, and go to state 52
    INT   shift, and go to state 53
    REAL  shift, and go to state 54

    type  go to state 55


State 42

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . ASTERISK expr
   24     | expr . DIVIDE expr
   27     | MINUS $@3 expr .

    $default  reduce using rule 27 (expr)


State 43

   25 expr: LEFT_PAREN expr RIGHT_PAREN .

    $default  reduce using rule 25 (expr)


State 44

   19 assignment: IDENTIFIER ASSIGN expr .
   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . ASTERISK expr
   24     | expr . DIVIDE expr

    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    ASTERISK  shift, and go to state 38
    DIVIDE    shift, and go to state 39

    $default  reduce using rule 19 (assignment)


State 45

    8 stmt_list: stmt_list stmt SEMICOLON .

    $default  reduce using rule 8 (stmt_list)


State 46

   21 expr: expr . PLUS expr
   21     | expr PLUS expr .
   22     | expr . MINUS expr
   23     | expr . ASTERISK expr
   24     | expr . DIVIDE expr

    ASTERISK  shift, and go to state 38
    DIVIDE    shift, and go to state 39

    $default  reduce using rule 21 (expr)


State 47

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   22     | expr MINUS expr .
   23     | expr . ASTERISK expr
   24     | expr . DIVIDE expr

    ASTERISK  shift, and go to state 38
    DIVIDE    shift, and go to state 39

    $default  reduce using rule 22 (expr)


State 48

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . ASTERISK expr
   23     | expr ASTERISK expr .
   24     | expr . DIVIDE expr

    $default  reduce using rule 23 (expr)


State 49

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . ASTERISK expr
   24     | expr . DIVIDE expr
   24     | expr DIVIDE expr .

    $default  reduce using rule 24 (expr)


State 50

   28 print: PRINT LEFT_PAREN expr RIGHT_PAREN .

    $default  reduce using rule 28 (print)


State 51

   15 type: BOOL .

    $default  reduce using rule 15 (type)


State 52

   16 type: CHAR .

    $default  reduce using rule 16 (type)


State 53

   17 type: INT .

    $default  reduce using rule 17 (type)


State 54

   18 type: REAL .

    $default  reduce using rule 18 (type)


State 55

   13 declare: VAR IDENTIFIER COLON type .
   14        | VAR IDENTIFIER COLON type . ASSIGN expr

    ASSIGN  shift, and go to state 56

    $default  reduce using rule 13 (declare)


State 56

   14 declare: VAR IDENTIFIER COLON type ASSIGN . expr

    MINUS       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    INTEGER     shift, and go to state 15
    REALNUMBER  shift, and go to state 16
    STRING      shift, and go to state 17
    IDENTIFIER  shift, and go to state 30

    expr   go to state 57
    value  go to state 26


State 57

   14 declare: VAR IDENTIFIER COLON type ASSIGN expr .
   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . ASTERISK expr
   24     | expr . DIVIDE expr

    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    ASTERISK  shift, and go to state 38
    DIVIDE    shift, and go to state 39

    $default  reduce using rule 14 (declare)
